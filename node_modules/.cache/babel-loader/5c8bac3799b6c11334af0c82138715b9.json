{"ast":null,"code":"\"use strict\";\n\nvar hasToStringTag = require(\"has-to-string-tag-x\");\n\nvar isObject = require(\"is-object\");\n\nvar toString = Object.prototype.toString;\nvar urlClass = \"[object URL]\";\nvar hash = \"hash\";\nvar host = \"host\";\nvar hostname = \"hostname\";\nvar href = \"href\";\nvar password = \"password\";\nvar pathname = \"pathname\";\nvar port = \"port\";\nvar protocol = \"protocol\";\nvar search = \"search\";\nvar username = \"username\";\n\nvar isURL = function isURL(url, supportIncomplete\n/*=false*/\n) {\n  if (!isObject(url)) return false; // Native implementation in older browsers\n\n  if (!hasToStringTag && toString.call(url) === urlClass) return true;\n  if (!(href in url)) return false;\n  if (!(protocol in url)) return false;\n  if (!(username in url)) return false;\n  if (!(password in url)) return false;\n  if (!(hostname in url)) return false;\n  if (!(port in url)) return false;\n  if (!(host in url)) return false;\n  if (!(pathname in url)) return false;\n  if (!(search in url)) return false;\n  if (!(hash in url)) return false;\n\n  if (supportIncomplete !== true) {\n    if (!isObject(url.searchParams)) return false; // TODO :: write a separate isURLSearchParams ?\n  }\n\n  return true;\n};\n\nisURL.lenient = function (url) {\n  return isURL(url, true);\n};\n\nmodule.exports = isURL;","map":null,"metadata":{},"sourceType":"script"}