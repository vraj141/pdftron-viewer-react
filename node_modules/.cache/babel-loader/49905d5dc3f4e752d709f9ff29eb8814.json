{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\vrajs\\\\Desktop\\\\webviewer-react-sample-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\vrajs\\\\Desktop\\\\webviewer-react-sample-master\\\\src\\\\App.js\";\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport WebViewer from '@pdftron/webviewer';\nimport './App.css';\n\nvar App = function App(props) {\n  var viewer = useRef(null);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      pdf = _useState2[0],\n      setPdf = _useState2[1];\n\n  useEffect(function () {\n    setPdf(props.pdfUrl);\n  }, [props.pdfUrl]); // if using a class, equivalent of componentDidMount \n\n  if (pdf) {\n    useEffect(function () {\n      WebViewer({\n        path: '/webviewer/lib',\n        initialDoc: pdf\n      }, viewer.current).then(function (instance) {\n        var docViewer = instance.docViewer,\n            Annotations = instance.Annotations;\n        var annotManager = docViewer.getAnnotationManager();\n        docViewer.on('documentLoaded', function () {\n          var rectangleAnnot = new Annotations.RectangleAnnotation();\n          rectangleAnnot.PageNumber = 1; // values are in page coordinates with (0, 0) in the top left\n\n          rectangleAnnot.X = 50;\n          rectangleAnnot.Y = 50;\n          rectangleAnnot.Width = 100;\n          rectangleAnnot.Height = 50;\n          rectangleAnnot.Author = annotManager.getCurrentUser();\n          annotManager.addAnnotation(rectangleAnnot); // need to draw the annotation otherwise it won't show up until the page is refreshed\n\n          annotManager.redrawAnnotation(rectangleAnnot);\n        });\n      });\n    }, []);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"React sample\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"webviewer\",\n    ref: viewer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/vrajs/Desktop/webviewer-react-sample-master/src/App.js"],"names":["React","useRef","useEffect","useState","WebViewer","App","props","viewer","pdf","setPdf","pdfUrl","path","initialDoc","current","then","instance","docViewer","Annotations","annotManager","getAnnotationManager","on","rectangleAnnot","RectangleAnnotation","PageNumber","X","Y","Width","Height","Author","getCurrentUser","addAnnotation","redrawAnnotation"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAO,WAAP;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AACrB,MAAMC,MAAM,GAAGN,MAAM,CAAC,IAAD,CAArB;;AADqB,kBAECE,QAAQ,CAAC,IAAD,CAFT;AAAA;AAAA,MAEdK,GAFc;AAAA,MAETC,MAFS;;AAIrBP,EAAAA,SAAS,CAAC,YAAI;AACZO,IAAAA,MAAM,CAACH,KAAK,CAACI,MAAP,CAAN;AACD,GAFQ,EAEP,CAACJ,KAAK,CAACI,MAAP,CAFO,CAAT,CAJqB,CAQrB;;AACA,MAAGF,GAAH,EAAO;AACLN,IAAAA,SAAS,CAAC,YAAM;AACdE,MAAAA,SAAS,CACP;AACEO,QAAAA,IAAI,EAAE,gBADR;AAEEC,QAAAA,UAAU,EAAEJ;AAFd,OADO,EAKPD,MAAM,CAACM,OALA,CAAT,CAMEC,IANF,CAMO,UAACC,QAAD,EAAc;AAAA,YACXC,SADW,GACgBD,QADhB,CACXC,SADW;AAAA,YACAC,WADA,GACgBF,QADhB,CACAE,WADA;AAEnB,YAAMC,YAAY,GAAGF,SAAS,CAACG,oBAAV,EAArB;AAEAH,QAAAA,SAAS,CAACI,EAAV,CAAa,gBAAb,EAA+B,YAAM;AACnC,cAAMC,cAAc,GAAG,IAAIJ,WAAW,CAACK,mBAAhB,EAAvB;AACAD,UAAAA,cAAc,CAACE,UAAf,GAA4B,CAA5B,CAFmC,CAGnC;;AACAF,UAAAA,cAAc,CAACG,CAAf,GAAmB,EAAnB;AACAH,UAAAA,cAAc,CAACI,CAAf,GAAmB,EAAnB;AACAJ,UAAAA,cAAc,CAACK,KAAf,GAAuB,GAAvB;AACAL,UAAAA,cAAc,CAACM,MAAf,GAAwB,EAAxB;AACAN,UAAAA,cAAc,CAACO,MAAf,GAAwBV,YAAY,CAACW,cAAb,EAAxB;AAEAX,UAAAA,YAAY,CAACY,aAAb,CAA2BT,cAA3B,EAVmC,CAWnC;;AACAH,UAAAA,YAAY,CAACa,gBAAb,CAA8BV,cAA9B;AACD,SAbD;AAcD,OAxBD;AAyBD,KA1BQ,EA0BN,EA1BM,CAAT;AA2BD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAGE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEd,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CA9CD;;AAgDA,eAAeF,GAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport WebViewer from '@pdftron/webviewer';\nimport './App.css';\n\nconst App = (props) => {\n  const viewer = useRef(null);\n  const [pdf, setPdf] = useState(null);\n\n  useEffect(()=>{\n    setPdf(props.pdfUrl);\n  },[props.pdfUrl])\n\n  // if using a class, equivalent of componentDidMount \n  if(pdf){\n    useEffect(() => {\n      WebViewer(\n        {\n          path: '/webviewer/lib',\n          initialDoc: pdf,\n        },\n        viewer.current,\n      ).then((instance) => {\n        const { docViewer, Annotations } = instance;\n        const annotManager = docViewer.getAnnotationManager();\n  \n        docViewer.on('documentLoaded', () => {\n          const rectangleAnnot = new Annotations.RectangleAnnotation();\n          rectangleAnnot.PageNumber = 1;\n          // values are in page coordinates with (0, 0) in the top left\n          rectangleAnnot.X = 50;\n          rectangleAnnot.Y = 50;\n          rectangleAnnot.Width = 100;\n          rectangleAnnot.Height = 50;\n          rectangleAnnot.Author = annotManager.getCurrentUser();\n  \n          annotManager.addAnnotation(rectangleAnnot);\n          // need to draw the annotation otherwise it won't show up until the page is refreshed\n          annotManager.redrawAnnotation(rectangleAnnot);\n        });\n      });\n    }, []);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">React sample</div>\n\n      <div className=\"webviewer\" ref={viewer}></div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}