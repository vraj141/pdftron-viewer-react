{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\vrajs\\\\Desktop\\\\firebase-file-upload-pdftron-reactjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\vrajs\\\\Desktop\\\\firebase-file-upload-pdftron-reactjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\vrajs\\\\Desktop\\\\firebase-file-upload-pdftron-reactjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"C:\\\\Users\\\\vrajs\\\\Desktop\\\\firebase-file-upload-pdftron-reactjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\vrajs\\\\Desktop\\\\firebase-file-upload-pdftron-reactjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\vrajs\\\\Desktop\\\\firebase-file-upload-pdftron-reactjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar ConfigChain = require('config-chain').ConfigChain;\n\nvar util = require('./util');\n\nvar Conf = /*#__PURE__*/function (_ConfigChain) {\n  _inherits(Conf, _ConfigChain);\n\n  // https://github.com/npm/npm/blob/latest/lib/config/core.js#L208-L222\n  function Conf(base) {\n    var _this;\n\n    _classCallCheck(this, Conf);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Conf).call(this, base));\n    _this.root = base;\n    return _this;\n  } // https://github.com/npm/npm/blob/latest/lib/config/core.js#L332-L342\n\n\n  _createClass(Conf, [{\n    key: \"add\",\n    value: function add(data, marker) {\n      try {\n        for (var _i = 0, _Object$keys = Object.keys(data); _i < _Object$keys.length; _i++) {\n          var x = _Object$keys[_i];\n          data[x] = util.parseField(data[x], x);\n        }\n      } catch (err) {\n        throw err;\n      }\n\n      return _get(_getPrototypeOf(Conf.prototype), \"add\", this).call(this, data, marker);\n    } // https://github.com/npm/npm/blob/latest/lib/config/core.js#L312-L325\n\n  }, {\n    key: \"addFile\",\n    value: function addFile(file, name) {\n      name = name || file;\n      var marker = {\n        __source__: name\n      };\n      this.sources[name] = {\n        path: file,\n        type: 'ini'\n      };\n      this.push(marker);\n\n      this._await();\n\n      try {\n        var contents = fs.readFileSync(file, 'utf8');\n        this.addString(contents, file, 'ini', marker);\n      } catch (err) {\n        this.add({}, marker);\n      }\n\n      return this;\n    } // https://github.com/npm/npm/blob/latest/lib/config/core.js#L344-L360\n\n  }, {\n    key: \"addEnv\",\n    value: function addEnv(env) {\n      env = env || process.env;\n      var conf = {};\n      Object.keys(env).filter(function (x) {\n        return /^npm_config_/i.test(x);\n      }).forEach(function (x) {\n        if (!env[x]) {\n          return;\n        }\n\n        var p = x.toLowerCase().replace(/^npm_config_/, '').replace(/(?!^)_/g, '-');\n        conf[p] = env[x];\n      });\n      return _get(_getPrototypeOf(Conf.prototype), \"addEnv\", this).call(this, '', conf, 'env');\n    } // https://github.com/npm/npm/blob/latest/lib/config/load-prefix.js\n\n  }, {\n    key: \"loadPrefix\",\n    value: function loadPrefix() {\n      var _this2 = this;\n\n      var cli = this.list[0];\n      Object.defineProperty(this, 'prefix', {\n        enumerable: true,\n        set: function set(prefix) {\n          var g = _this2.get('global');\n\n          _this2[g ? 'globalPrefix' : 'localPrefix'] = prefix;\n        },\n        get: function get() {\n          var g = _this2.get('global');\n\n          return g ? _this2.globalPrefix : _this2.localPrefix;\n        }\n      });\n      Object.defineProperty(this, 'globalPrefix', {\n        enumerable: true,\n        set: function set(prefix) {\n          _this2.set('prefix', prefix);\n        },\n        get: function get() {\n          return path.resolve(_this2.get('prefix'));\n        }\n      });\n      var p;\n      Object.defineProperty(this, 'localPrefix', {\n        enumerable: true,\n        set: function set(prefix) {\n          p = prefix;\n        },\n        get: function get() {\n          return p;\n        }\n      });\n\n      if (Object.prototype.hasOwnProperty.call(cli, 'prefix')) {\n        p = path.resolve(cli.prefix);\n      } else {\n        try {\n          var prefix = util.findPrefix(process.cwd());\n          p = prefix;\n        } catch (err) {\n          throw err;\n        }\n      }\n\n      return p;\n    } // https://github.com/npm/npm/blob/latest/lib/config/load-cafile.js\n\n  }, {\n    key: \"loadCAFile\",\n    value: function loadCAFile(file) {\n      if (!file) {\n        return;\n      }\n\n      try {\n        var contents = fs.readFileSync(file, 'utf8');\n        var delim = '-----END CERTIFICATE-----';\n        var output = contents.split(delim).filter(function (x) {\n          return Boolean(x.trim());\n        }).map(function (x) {\n          return x.trimLeft() + delim;\n        });\n        this.set('ca', output);\n      } catch (err) {\n        if (err.code === 'ENOENT') {\n          return;\n        }\n\n        throw err;\n      }\n    } // https://github.com/npm/npm/blob/latest/lib/config/set-user.js\n\n  }, {\n    key: \"loadUser\",\n    value: function loadUser() {\n      var defConf = this.root;\n\n      if (this.get('global')) {\n        return;\n      }\n\n      if (process.env.SUDO_UID) {\n        defConf.user = Number(process.env.SUDO_UID);\n        return;\n      }\n\n      var prefix = path.resolve(this.get('prefix'));\n\n      try {\n        var stats = fs.statSync(prefix);\n        defConf.user = stats.uid;\n      } catch (err) {\n        if (err.code === 'ENOENT') {\n          return;\n        }\n\n        throw err;\n      }\n    }\n  }]);\n\n  return Conf;\n}(ConfigChain);\n\nmodule.exports = Conf;","map":null,"metadata":{},"sourceType":"script"}