{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\vrajs\\\\Desktop\\\\firebase-file-upload-pdftron-reactjs\\\\src\\\\App.js\";\n\nimport React, { useRef, useEffect } from 'react';\nimport WebViewer from '@pdftron/webviewer';\nimport './App.css';\n\nvar App = function App(props) {\n  var viewer = useRef(null); // const [pdfUrl, setPdfUrl] = useState(pdfUrl);\n  // useEffect(()=>{\n  //   setPdf(props.pdfUrl);\n  // },[props.pdfUrl])\n  // // if using a class, equivalent of componentDidMount \n  // if(pdf){\n  /////////////////////////////////////////////////////////////////////////////\n  // useEffect(() => {\n  //   WebViewer(\n  //     {\n  //       path: '/webviewer/lib',\n  //       initialDoc: props.pdfUrl,\n  //     },\n  //     viewer.current,\n  //   ).then((instance) => {\n  //     instance.setTheme('dark');\n  //     const { docViewer, Annotations } = instance;\n  //     const annotManager = docViewer.getAnnotationManager();\n  //      ///////////////////////////////////////////////////\n  //     docViewer.on('documentLoaded', () => {\n  //       const rectangleAnnot = new Annotations.RectangleAnnotation();\n  //       rectangleAnnot.PageNumber = 1;\n  //       // values are in page coordinates with (0, 0) in the top left\n  //       rectangleAnnot.X = 50;\n  //       rectangleAnnot.Y = 50;\n  //       rectangleAnnot.Width = 100;\n  //       rectangleAnnot.Height = 50;\n  //       rectangleAnnot.Author = annotManager.getCurrentUser();\n  //       annotManager.addAnnotation(rectangleAnnot);\n  //       // need to draw the annotation otherwise it won't show up until the page is refreshed\n  //       annotManager.redrawAnnotation(rectangleAnnot);\n  //     });\n  //   });\n  // }, []);\n  // }\n  //////gazab nu dimag bapu documentation ma thi use karlu https://www.pdftron.com/documentation/web/guides/get-file-data-with-viewer/\n  // useEffect(() => {\n  //     WebViewer(\n  //       {\n  //         path: '/webviewer/lib',\n  //         initialDoc: props.pdfUrl,\n  //       },\n  //       viewer.current,\n  //     )\n  //   .then(instance => {\n  //     const { docViewer, annotManager } = instance;\n  //     // Add header button that will get file data on click\n  //     instance.setHeaderItems(header => {\n  //       header.push({\n  //           type: 'actionButton',\n  //           img: '...',\n  //           onClick: async () => {\n  //             const doc = docViewer.getDocument();\n  //             const xfdfString = await annotManager.exportAnnotations();\n  //             const data = await doc.getFileData({\n  //               // saves the document with annotations in it\n  //               xfdfString\n  //             });\n  //             const arr = new Uint8Array(data);\n  //             const blob = new Blob([arr], { type: 'application/pdf' });\n  //             // add code for handling Blob here\n  //           }\n  //       });\n  //     });\n  //   });\n  //       });\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"React sample\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"webviewer\",\n    ref: viewer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/vrajs/Desktop/firebase-file-upload-pdftron-reactjs/src/App.js"],"names":["React","useRef","useEffect","WebViewer","App","props","viewer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAO,WAAP;;AAKA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AACrB,MAAMC,MAAM,GAAGL,MAAM,CAAC,IAAD,CAArB,CADqB,CAErB;AAEA;AACA;AACA;AAEA;AACA;AAIA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEF;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAGE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEK,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CA1FD;;AA4FA,eAAeF,GAAf","sourcesContent":["import React, { useRef, useEffect} from 'react';\nimport WebViewer from '@pdftron/webviewer';\nimport './App.css';\n \n\n\n\nconst App = (props) => {\n  const viewer = useRef(null);\n  // const [pdfUrl, setPdfUrl] = useState(pdfUrl);\n\n  // useEffect(()=>{\n  //   setPdf(props.pdfUrl);\n  // },[props.pdfUrl])\n\n  // // if using a class, equivalent of componentDidMount \n  // if(pdf){\n\n\n   \n  /////////////////////////////////////////////////////////////////////////////\n    // useEffect(() => {\n    //   WebViewer(\n    //     {\n    //       path: '/webviewer/lib',\n    //       initialDoc: props.pdfUrl,\n    //     },\n    //     viewer.current,\n    //   ).then((instance) => {\n    //     instance.setTheme('dark');\n    //     const { docViewer, Annotations } = instance;\n    //     const annotManager = docViewer.getAnnotationManager();\n    //      ///////////////////////////////////////////////////\n  \n    //     docViewer.on('documentLoaded', () => {\n    //       const rectangleAnnot = new Annotations.RectangleAnnotation();\n    //       rectangleAnnot.PageNumber = 1;\n    //       // values are in page coordinates with (0, 0) in the top left\n    //       rectangleAnnot.X = 50;\n    //       rectangleAnnot.Y = 50;\n    //       rectangleAnnot.Width = 100;\n    //       rectangleAnnot.Height = 50;\n    //       rectangleAnnot.Author = annotManager.getCurrentUser();\n          \n  \n    //       annotManager.addAnnotation(rectangleAnnot);\n    //       // need to draw the annotation otherwise it won't show up until the page is refreshed\n    //       annotManager.redrawAnnotation(rectangleAnnot);\n    //     });\n    //   });\n    // }, []);\n\n  // }\n\n\n  //////gazab nu dimag bapu documentation ma thi use karlu https://www.pdftron.com/documentation/web/guides/get-file-data-with-viewer/\n  // useEffect(() => {\n  //     WebViewer(\n  //       {\n  //         path: '/webviewer/lib',\n  //         initialDoc: props.pdfUrl,\n  //       },\n  //       viewer.current,\n  //     )\n  //   .then(instance => {\n  //     const { docViewer, annotManager } = instance;\n  \n  //     // Add header button that will get file data on click\n  //     instance.setHeaderItems(header => {\n  //       header.push({\n  //           type: 'actionButton',\n  //           img: '...',\n  //           onClick: async () => {\n  //             const doc = docViewer.getDocument();\n  //             const xfdfString = await annotManager.exportAnnotations();\n  //             const data = await doc.getFileData({\n  //               // saves the document with annotations in it\n  //               xfdfString\n  //             });\n  //             const arr = new Uint8Array(data);\n  //             const blob = new Blob([arr], { type: 'application/pdf' });\n  \n  //             // add code for handling Blob here\n  //           }\n  //       });\n  //     });\n  //   });\n  //       });\n     \n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">React sample</div>\n\n      <div className=\"webviewer\" ref={viewer}></div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}