{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\vrajs\\\\Desktop\\\\webviewer-react-sample-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\vrajs\\\\Desktop\\\\webviewer-react-sample-master\\\\src\\\\App.js\";\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport WebViewer from '@pdftron/webviewer';\nimport './App.css';\n\nvar App = function App(props) {\n  var viewer = useRef(null);\n\n  var _useState = useState(pdfUrl),\n      _useState2 = _slicedToArray(_useState, 2),\n      pdfUrl = _useState2[0],\n      setPdfUrl = _useState2[1]; // useEffect(()=>{\n  //   setPdf(props.pdfUrl);\n  // },[props.pdfUrl])\n  // // if using a class, equivalent of componentDidMount \n  // if(pdf){\n\n\n  useEffect(function () {\n    WebViewer({\n      path: '/webviewer/lib',\n      initialDoc: ''\n    }, viewer.current).then(function (instance) {\n      openbtn.on('click', function () {\n        instance.loadDocument({\n          url: url\n        }, {\n          documentId: 'id2'\n        });\n      });\n      var docViewer = instance.docViewer,\n          Annotations = instance.Annotations;\n      var annotManager = docViewer.getAnnotationManager();\n      docViewer.on('documentLoaded', function () {\n        var rectangleAnnot = new Annotations.RectangleAnnotation();\n        rectangleAnnot.PageNumber = 1; // values are in page coordinates with (0, 0) in the top left\n\n        rectangleAnnot.X = 50;\n        rectangleAnnot.Y = 50;\n        rectangleAnnot.Width = 100;\n        rectangleAnnot.Height = 50;\n        rectangleAnnot.Author = annotManager.getCurrentUser();\n        annotManager.addAnnotation(rectangleAnnot); // need to draw the annotation otherwise it won't show up until the page is refreshed\n\n        annotManager.redrawAnnotation(rectangleAnnot);\n      });\n    });\n  }, []); // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"React sample\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"webviewer\",\n    ref: viewer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/vrajs/Desktop/webviewer-react-sample-master/src/App.js"],"names":["React","useRef","useEffect","useState","WebViewer","App","props","viewer","pdfUrl","setPdfUrl","path","initialDoc","current","then","instance","openbtn","on","loadDocument","url","documentId","docViewer","Annotations","annotManager","getAnnotationManager","rectangleAnnot","RectangleAnnotation","PageNumber","X","Y","Width","Height","Author","getCurrentUser","addAnnotation","redrawAnnotation"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAO,WAAP;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AACrB,MAAMC,MAAM,GAAGN,MAAM,CAAC,IAAD,CAArB;;AADqB,kBAEOE,QAAQ,CAACK,MAAD,CAFf;AAAA;AAAA,MAEdA,MAFc;AAAA,MAENC,SAFM,kBAIrB;AACA;AACA;AAEA;AACA;;;AACEP,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,SAAS,CACP;AACEM,MAAAA,IAAI,EAAE,gBADR;AAEEC,MAAAA,UAAU,EAAE;AAFd,KADO,EAKPJ,MAAM,CAACK,OALA,CAAT,CAMEC,IANF,CAMO,UAACC,QAAD,EAAc;AACnBC,MAAAA,OAAO,CAACC,EAAR,CAAW,OAAX,EAAoB,YAAM;AACxBF,QAAAA,QAAQ,CAACG,YAAT,CAAsB;AAACC,UAAAA,GAAG,EAAHA;AAAD,SAAtB,EAA6B;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAA7B;AACD,OAFD;AADmB,UAIXC,SAJW,GAIgBN,QAJhB,CAIXM,SAJW;AAAA,UAIAC,WAJA,GAIgBP,QAJhB,CAIAO,WAJA;AAKnB,UAAMC,YAAY,GAAGF,SAAS,CAACG,oBAAV,EAArB;AAEAH,MAAAA,SAAS,CAACJ,EAAV,CAAa,gBAAb,EAA+B,YAAM;AACnC,YAAMQ,cAAc,GAAG,IAAIH,WAAW,CAACI,mBAAhB,EAAvB;AACAD,QAAAA,cAAc,CAACE,UAAf,GAA4B,CAA5B,CAFmC,CAGnC;;AACAF,QAAAA,cAAc,CAACG,CAAf,GAAmB,EAAnB;AACAH,QAAAA,cAAc,CAACI,CAAf,GAAmB,EAAnB;AACAJ,QAAAA,cAAc,CAACK,KAAf,GAAuB,GAAvB;AACAL,QAAAA,cAAc,CAACM,MAAf,GAAwB,EAAxB;AACAN,QAAAA,cAAc,CAACO,MAAf,GAAwBT,YAAY,CAACU,cAAb,EAAxB;AAEAV,QAAAA,YAAY,CAACW,aAAb,CAA2BT,cAA3B,EAVmC,CAWnC;;AACAF,QAAAA,YAAY,CAACY,gBAAb,CAA8BV,cAA9B;AACD,OAbD;AAcD,KA3BD;AA4BD,GA7BQ,EA6BN,EA7BM,CAAT,CAVmB,CAwCrB;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAGE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEjB,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAjDD;;AAmDA,eAAeF,GAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport WebViewer from '@pdftron/webviewer';\nimport './App.css';\n\nconst App = (props) => {\n  const viewer = useRef(null);\n  const [pdfUrl, setPdfUrl] = useState(pdfUrl);\n\n  // useEffect(()=>{\n  //   setPdf(props.pdfUrl);\n  // },[props.pdfUrl])\n\n  // // if using a class, equivalent of componentDidMount \n  // if(pdf){\n    useEffect(() => {\n      WebViewer(\n        {\n          path: '/webviewer/lib',\n          initialDoc: '',\n        },\n        viewer.current,\n      ).then((instance) => {\n        openbtn.on('click', () => {\n          instance.loadDocument({url}, { documentId: 'id2' });\n        });\n        const { docViewer, Annotations } = instance;\n        const annotManager = docViewer.getAnnotationManager();\n  \n        docViewer.on('documentLoaded', () => {\n          const rectangleAnnot = new Annotations.RectangleAnnotation();\n          rectangleAnnot.PageNumber = 1;\n          // values are in page coordinates with (0, 0) in the top left\n          rectangleAnnot.X = 50;\n          rectangleAnnot.Y = 50;\n          rectangleAnnot.Width = 100;\n          rectangleAnnot.Height = 50;\n          rectangleAnnot.Author = annotManager.getCurrentUser();\n  \n          annotManager.addAnnotation(rectangleAnnot);\n          // need to draw the annotation otherwise it won't show up until the page is refreshed\n          annotManager.redrawAnnotation(rectangleAnnot);\n        });\n      });\n    }, []);\n  // }\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">React sample</div>\n\n      <div className=\"webviewer\" ref={viewer}></div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}