{"ast":null,"code":"'use strict';\n\nvar path = require('path');\n\nvar Conf = require('./lib/conf');\n\nvar defaults = require('./lib/defaults'); // https://github.com/npm/npm/blob/latest/lib/config/core.js#L101-L200\n\n\nmodule.exports = function (opts) {\n  var conf = new Conf(Object.assign({}, defaults.defaults));\n  conf.add(Object.assign({}, opts), 'cli');\n  conf.addEnv();\n  conf.loadPrefix();\n  var projectConf = path.resolve(conf.localPrefix, '.npmrc');\n  var userConf = conf.get('userconfig');\n\n  if (!conf.get('global') && projectConf !== userConf) {\n    conf.addFile(projectConf, 'project');\n  } else {\n    conf.add({}, 'project');\n  }\n\n  conf.addFile(conf.get('userconfig'), 'user');\n\n  if (conf.get('prefix')) {\n    var etc = path.resolve(conf.get('prefix'), 'etc');\n    conf.root.globalconfig = path.resolve(etc, 'npmrc');\n    conf.root.globalignorefile = path.resolve(etc, 'npmignore');\n  }\n\n  conf.addFile(conf.get('globalconfig'), 'global');\n  conf.loadUser();\n  var caFile = conf.get('cafile');\n\n  if (caFile) {\n    conf.loadCAFile(caFile);\n  }\n\n  return conf;\n};\n\nmodule.exports.defaults = Object.assign({}, defaults.defaults);","map":null,"metadata":{},"sourceType":"script"}