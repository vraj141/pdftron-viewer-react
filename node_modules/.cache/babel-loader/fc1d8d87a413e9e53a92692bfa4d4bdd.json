{"ast":null,"code":"// import React, { useRef, useEffect, useState } from 'react';\n// import WebViewer from '@pdftron/webviewer';\n// import './App.css';\n// const App = () => {\n//   const viewer = useRef(null);\n//   // const [pdfUrl, setPdfUrl] = useState(pdfUrl);\n//   // useEffect(()=>{\n//   //   setPdf(props.pdfUrl);\n//   // },[props.pdfUrl])\n//   // // if using a class, equivalent of componentDidMount \n//   // if(pdf){\n//     useEffect(() => {\n//       WebViewer(\n//         {\n//           path: '/webviewer/lib',\n//           initialDoc: '',\n//         },\n//         viewer.current,\n//       ).then((instance) => {\n//         const { docViewer, Annotations } = instance;\n//         const annotManager = docViewer.getAnnotationManager();\n//         docViewer.on('documentLoaded', () => {\n//           const rectangleAnnot = new Annotations.RectangleAnnotation();\n//           rectangleAnnot.PageNumber = 1;\n//           // values are in page coordinates with (0, 0) in the top left\n//           rectangleAnnot.X = 50;\n//           rectangleAnnot.Y = 50;\n//           rectangleAnnot.Width = 100;\n//           rectangleAnnot.Height = 50;\n//           rectangleAnnot.Author = annotManager.getCurrentUser();\n//           annotManager.addAnnotation(rectangleAnnot);\n//           // need to draw the annotation otherwise it won't show up until the page is refreshed\n//           annotManager.redrawAnnotation(rectangleAnnot);\n//         });\n//       });\n//     }, []);\n//   // }\n//   return (\n//     <div className=\"App\">\n//       <div className=\"header\">React sample</div>\n//       <div className=\"webviewer\" ref={viewer}></div>\n//     </div>\n//   );\n// };\n// export default App;","map":{"version":3,"sources":["C:/Users/vrajs/Desktop/webviewer-react-sample-master/src/App.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useRef, useEffect, useState } from 'react';\n// import WebViewer from '@pdftron/webviewer';\n// import './App.css';\n\n// const App = () => {\n//   const viewer = useRef(null);\n//   // const [pdfUrl, setPdfUrl] = useState(pdfUrl);\n\n//   // useEffect(()=>{\n//   //   setPdf(props.pdfUrl);\n//   // },[props.pdfUrl])\n\n//   // // if using a class, equivalent of componentDidMount \n//   // if(pdf){\n//     useEffect(() => {\n//       WebViewer(\n//         {\n//           path: '/webviewer/lib',\n//           initialDoc: '',\n//         },\n//         viewer.current,\n//       ).then((instance) => {\n        \n//         const { docViewer, Annotations } = instance;\n//         const annotManager = docViewer.getAnnotationManager();\n  \n//         docViewer.on('documentLoaded', () => {\n//           const rectangleAnnot = new Annotations.RectangleAnnotation();\n//           rectangleAnnot.PageNumber = 1;\n//           // values are in page coordinates with (0, 0) in the top left\n//           rectangleAnnot.X = 50;\n//           rectangleAnnot.Y = 50;\n//           rectangleAnnot.Width = 100;\n//           rectangleAnnot.Height = 50;\n//           rectangleAnnot.Author = annotManager.getCurrentUser();\n  \n//           annotManager.addAnnotation(rectangleAnnot);\n//           // need to draw the annotation otherwise it won't show up until the page is refreshed\n//           annotManager.redrawAnnotation(rectangleAnnot);\n//         });\n//       });\n//     }, []);\n//   // }\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"header\">React sample</div>\n\n//       <div className=\"webviewer\" ref={viewer}></div>\n//     </div>\n//   );\n// };\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}