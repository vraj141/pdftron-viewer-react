{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\vrajs\\\\Desktop\\\\firebase-file-upload-pdftron-reactjs\\\\src\\\\App.js\";\n\nimport React, { useRef, useEffect } from 'react';\nimport WebViewer from '@pdftron/webviewer';\nimport './App.css';\n\nvar App = function App(props) {\n  var viewer = useRef(null); // const [pdfUrl, setPdfUrl] = useState(pdfUrl);\n  // useEffect(()=>{\n  //   setPdf(props.pdfUrl);\n  // },[props.pdfUrl])\n  // // if using a class, equivalent of componentDidMount \n  // if(pdf){\n  /////////////////////////////////////////////////////////////////////////////\n\n  useEffect(function () {\n    WebViewer({\n      path: '/webviewer/lib',\n      initialDoc: props.pdfUrl\n    }, viewer.current).then(function (instance) {\n      instance.setTheme('dark');\n      var docViewer = instance.docViewer,\n          Annotations = instance.Annotations;\n      var annotManager = docViewer.getAnnotationManager(); /////////////////////////////////////////////////////\n\n      instance.setHeaderItems(function (header) {\n        header.push({\n          type: 'actionButton',\n          img: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"/></svg>',\n          onClick: function onClick() {// save the annotations\n          }\n        });\n      }); ////////////////////////////////////////////////\n\n      docViewer.on('documentLoaded', function () {\n        var rectangleAnnot = new Annotations.RectangleAnnotation();\n        rectangleAnnot.PageNumber = 1; // values are in page coordinates with (0, 0) in the top left\n\n        rectangleAnnot.X = 50;\n        rectangleAnnot.Y = 50;\n        rectangleAnnot.Width = 100;\n        rectangleAnnot.Height = 50;\n        rectangleAnnot.Author = annotManager.getCurrentUser();\n        annotManager.addAnnotation(rectangleAnnot); // need to draw the annotation otherwise it won't show up until the page is refreshed\n\n        annotManager.redrawAnnotation(rectangleAnnot);\n      });\n    });\n  }, []); // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"React sample\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"webviewer\",\n    ref: viewer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/vrajs/Desktop/firebase-file-upload-pdftron-reactjs/src/App.js"],"names":["React","useRef","useEffect","WebViewer","App","props","viewer","path","initialDoc","pdfUrl","current","then","instance","setTheme","docViewer","Annotations","annotManager","getAnnotationManager","setHeaderItems","header","push","type","img","onClick","on","rectangleAnnot","RectangleAnnotation","PageNumber","X","Y","Width","Height","Author","getCurrentUser","addAnnotation","redrawAnnotation"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAO,WAAP;;AAKA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AACrB,MAAMC,MAAM,GAAGL,MAAM,CAAC,IAAD,CAArB,CADqB,CAErB;AAEA;AACA;AACA;AAEA;AACA;AAIA;;AACEC,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,SAAS,CACP;AACEI,MAAAA,IAAI,EAAE,gBADR;AAEEC,MAAAA,UAAU,EAAEH,KAAK,CAACI;AAFpB,KADO,EAKPH,MAAM,CAACI,OALA,CAAT,CAMEC,IANF,CAMO,UAACC,QAAD,EAAc;AACnBA,MAAAA,QAAQ,CAACC,QAAT,CAAkB,MAAlB;AADmB,UAEXC,SAFW,GAEgBF,QAFhB,CAEXE,SAFW;AAAA,UAEAC,WAFA,GAEgBH,QAFhB,CAEAG,WAFA;AAGnB,UAAMC,YAAY,GAAGF,SAAS,CAACG,oBAAV,EAArB,CAHmB,CAIlB;;AACIL,MAAAA,QAAQ,CAACM,cAAT,CAAwB,UAAAC,MAAM,EAAI;AACzCA,QAAAA,MAAM,CAACC,IAAP,CAAY;AACVC,UAAAA,IAAI,EAAE,cADI;AAEVC,UAAAA,GAAG,EAAE,mQAFK;AAGVC,UAAAA,OAAO,EAAE,mBAAM,CACb;AACD;AALS,SAAZ;AAOD,OARQ,EALc,CAclB;;AAEDT,MAAAA,SAAS,CAACU,EAAV,CAAa,gBAAb,EAA+B,YAAM;AACnC,YAAMC,cAAc,GAAG,IAAIV,WAAW,CAACW,mBAAhB,EAAvB;AACAD,QAAAA,cAAc,CAACE,UAAf,GAA4B,CAA5B,CAFmC,CAGnC;;AACAF,QAAAA,cAAc,CAACG,CAAf,GAAmB,EAAnB;AACAH,QAAAA,cAAc,CAACI,CAAf,GAAmB,EAAnB;AACAJ,QAAAA,cAAc,CAACK,KAAf,GAAuB,GAAvB;AACAL,QAAAA,cAAc,CAACM,MAAf,GAAwB,EAAxB;AACAN,QAAAA,cAAc,CAACO,MAAf,GAAwBhB,YAAY,CAACiB,cAAb,EAAxB;AAEAjB,QAAAA,YAAY,CAACkB,aAAb,CAA2BT,cAA3B,EAVmC,CAWnC;;AACAT,QAAAA,YAAY,CAACmB,gBAAb,CAA8BV,cAA9B;AACD,OAbD;AAcD,KApCD;AAqCD,GAtCQ,EAsCN,EAtCM,CAAT,CAdmB,CAqDrB;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAGE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEnB,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CA9DD;;AAgEA,eAAeF,GAAf","sourcesContent":["import React, { useRef, useEffect} from 'react';\nimport WebViewer from '@pdftron/webviewer';\nimport './App.css';\n \n\n\n\nconst App = (props) => {\n  const viewer = useRef(null);\n  // const [pdfUrl, setPdfUrl] = useState(pdfUrl);\n\n  // useEffect(()=>{\n  //   setPdf(props.pdfUrl);\n  // },[props.pdfUrl])\n\n  // // if using a class, equivalent of componentDidMount \n  // if(pdf){\n\n\n   \n  /////////////////////////////////////////////////////////////////////////////\n    useEffect(() => {\n      WebViewer(\n        {\n          path: '/webviewer/lib',\n          initialDoc: props.pdfUrl,\n        },\n        viewer.current,\n      ).then((instance) => {\n        instance.setTheme('dark');\n        const { docViewer, Annotations } = instance;\n        const annotManager = docViewer.getAnnotationManager();\n         /////////////////////////////////////////////////////\n             instance.setHeaderItems(header => {\n      header.push({\n        type: 'actionButton',\n        img: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"/></svg>',\n        onClick: () => {\n          // save the annotations\n        }\n      });\n    });\n         ////////////////////////////////////////////////\n  \n        docViewer.on('documentLoaded', () => {\n          const rectangleAnnot = new Annotations.RectangleAnnotation();\n          rectangleAnnot.PageNumber = 1;\n          // values are in page coordinates with (0, 0) in the top left\n          rectangleAnnot.X = 50;\n          rectangleAnnot.Y = 50;\n          rectangleAnnot.Width = 100;\n          rectangleAnnot.Height = 50;\n          rectangleAnnot.Author = annotManager.getCurrentUser();\n  \n          annotManager.addAnnotation(rectangleAnnot);\n          // need to draw the annotation otherwise it won't show up until the page is refreshed\n          annotManager.redrawAnnotation(rectangleAnnot);\n        });\n      });\n    }, []);\n  // }\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">React sample</div>\n\n      <div className=\"webviewer\" ref={viewer}></div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}