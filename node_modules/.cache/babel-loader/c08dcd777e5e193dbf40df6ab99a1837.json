{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\vrajs\\\\Desktop\\\\CHANGES TO BE INTEGRATED\\\\integrate pdftron viewer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\vrajs\\\\Desktop\\\\CHANGES TO BE INTEGRATED\\\\integrate pdftron viewer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\vrajs\\\\Desktop\\\\CHANGES TO BE INTEGRATED\\\\integrate pdftron viewer\\\\src\\\\index.js\";\n\n// import React,{useState} from 'react'; \nimport { storage } from \"./firebase\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport React, { useRef, useEffect } from 'react';\nimport WebViewer from '@pdftron/webviewer'; // import './App.css';\n\nvar PdfApp = function PdfApp() {\n  var viewer = useRef(null);\n\n  var showSignaturePanel = function showSignaturePanel() {\n    if (viewer.current.querySelector('iframe').contentDocument) // viewer.current.querySelector('iframe').contentDocument.querySelector(\n      //   'div[data-element=\"signatureToolButton\"]'\n      // ).firstChild.click();\n      console.log(\"Hiiiii\");\n    console.log(viewer.current.querySelector('iframe').contentDocument.querySelector('div[data-element=\"signatureToolButton\"]'));\n  };\n\n  useEffect(function () {\n    WebViewer({\n      path: '/webviewer/lib',\n      initialDoc: 'https://www.eurofound.europa.eu/sites/default/files/ef_publication/field_ef_document/ef1710en.pdf'\n    }, viewer.current).then(function (instance) {\n      instance.setTheme('light');\n      var docViewer = instance.docViewer,\n          Annotations = instance.Annotations,\n          CoreControls = instance.CoreControls;\n      var annotManager = docViewer.getAnnotationManager(); //////////////////////////////\n\n      instance.setHeaderItems(function (header) {\n        header.push({\n          type: 'actionButton',\n          img: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"/></svg>',\n          title: 'E signature',\n          onClick: function () {\n            var _onClick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      instance.setToolbarGroup('signatureToolGroupButton');\n\n                    case 1:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            function onClick() {\n              return _onClick.apply(this, arguments);\n            }\n\n            return onClick;\n          }()\n        });\n      }); ////////////////////////////////\n      // instance.setToolbarGroup('signatureToolGroupButton');\n      // instance.setHeaderItems(function(header) {\n      //   header.getHeader('toolbarGroup-Annotate').push({\n      //     type: 'toolGroupButton',\n      //     toolGroup: 'lineTools',\n      //     dataElement: 'lineToolGroupButton',\n      //     title: 'annotation.line',\n      //   });\n      // ///////////////////\n\n      instance.setHeaderItems(function (header) {\n        header.push({\n          type: 'actionButton',\n          img: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"/></svg>',\n          title: 'download',\n          onClick: function () {\n            var _onClick2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n              var xfdfString, saveOptions, options;\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.next = 2;\n                      return annotManager.exportAnnotations();\n\n                    case 2:\n                      xfdfString = _context2.sent;\n                      saveOptions = CoreControls.SaveOptions;\n                      options = {\n                        filename: 'myDocument.pdf',\n                        xfdfString: xfdfString,\n                        flags: saveOptions.LINEARIZED,\n                        downloadType: 'pdf'\n                      };\n                      instance.downloadPdf(options);\n\n                    case 6:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            }));\n\n            function onClick() {\n              return _onClick2.apply(this, arguments);\n            }\n\n            return onClick;\n          }()\n        });\n      }); ///disabled unuseful elements in tool bar\n\n      instance.disableElements(['zoomInButton', 'zoomOutButton', 'zoomOverlayButton', 'startFormEditingToolGroupButton', 'cropToolGroupButton', 'printButton', 'eraserToolButton', 'themeChangeButton', 'fullscreenButton', 'eraserToolButton', 'redoButton', 'undoButton', 'calloutToolGroupButton', 'fileAttachmentToolGroupButton', 'fileAttachmentToolGroupButton', 'stampToolGroupButton', 'rubberStampToolGroupButton', 'leftPanelButton', 'viewControlsButton', 'zoomOverlay', 'panToolButton', 'textSelectButton', 'selectToolButton', 'searchButton', 'toggleNotesButton', 'toolbarGroup-Annotate', 'toolbarGroup-Shapes', 'toolbarGroup-Edit', 'toolbarGroup-Annotate', 'menuButton']); //added save button in header toolbar\n\n      instance.setHeaderItems(function (header) {\n        header.push({\n          type: 'actionButton',\n          img: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"/></svg>',\n          title: 'save button',\n          onClick: function () {\n            var _onClick3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n              var doc, xfdfString, data, arr, blob, fileRef;\n              return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.t0 = console;\n                      _context3.next = 3;\n                      return annotManager.exportAnnotations({\n                        links: false,\n                        widgets: false\n                      });\n\n                    case 3:\n                      _context3.t1 = _context3.sent;\n\n                      _context3.t0.log.call(_context3.t0, _context3.t1);\n\n                      // save the annotations\n                      //////////////\n                      doc = docViewer.getDocument();\n                      _context3.next = 8;\n                      return annotManager.exportAnnotations();\n\n                    case 8:\n                      xfdfString = _context3.sent;\n                      _context3.next = 11;\n                      return doc.getFileData({\n                        xfdfString: xfdfString\n                      });\n\n                    case 11:\n                      data = _context3.sent;\n                      arr = new Uint8Array(data);\n                      blob = new Blob([arr], {\n                        type: 'application/pdf'\n                      });\n                      fileRef = storage.ref().child('https://www.eurofound.europa.eu/sites/default/files/ef_publication/field_ef_document/ef1710en.pdf');\n                      fileRef.put(blob);\n\n                    case 16:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            }));\n\n            function onClick() {\n              return _onClick3.apply(this, arguments);\n            }\n\n            return onClick;\n          }()\n        });\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"webviewer\",\n    ref: viewer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: showSignaturePanel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, \"E-sign\")));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PdfApp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 19\n  }\n})), document.getElementById('root')); // let showSignaturePanel = async () => {\n//   if (this.viewerRoot.current.querySelector('iframe').contentDocument)\n//     this.viewerRoot.current.querySelector('iframe').contentDocument.querySelector(\n//       'div[data-element=\"signatureToolButton\"]'\n//     ).firstChild.click();\n// }\n// //  showSi..()","map":{"version":3,"sources":["C:/Users/vrajs/Desktop/CHANGES TO BE INTEGRATED/integrate pdftron viewer/src/index.js"],"names":["storage","ReactDOM","React","useRef","useEffect","WebViewer","PdfApp","viewer","showSignaturePanel","current","querySelector","contentDocument","console","log","path","initialDoc","then","instance","setTheme","docViewer","Annotations","CoreControls","annotManager","getAnnotationManager","setHeaderItems","header","push","type","img","title","onClick","setToolbarGroup","exportAnnotations","xfdfString","saveOptions","SaveOptions","options","filename","flags","LINEARIZED","downloadType","downloadPdf","disableElements","links","widgets","doc","getDocument","getFileData","data","arr","Uint8Array","blob","Blob","fileRef","ref","child","put","render","document","getElementById"],"mappings":";;;;;;AAAA;AACA,SAAQA,OAAR,QAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AAEA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,oBAAtB,C,CAEA;;AAKA,IAAMC,MAAM,GAAE,SAARA,MAAQ,GAAI;AAKhB,MAAMC,MAAM,GAAGJ,MAAM,CAAC,IAAD,CAArB;;AACA,MAAMK,kBAAkB,GAAC,SAAnBA,kBAAmB,GAAK;AAC5B,QAAID,MAAM,CAACE,OAAP,CAAeC,aAAf,CAA6B,QAA7B,EAAuCC,eAA3C,EACE;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACE,OAAP,CAAeC,aAAf,CAA6B,QAA7B,EAAuCC,eAAvC,CAAuDD,aAAvD,CACV,yCADU,CAAZ;AAGH,GATD;;AAYAN,EAAAA,SAAS,CAAC,YAAM;AAIdC,IAAAA,SAAS,CACP;AACES,MAAAA,IAAI,EAAE,gBADR;AAEEC,MAAAA,UAAU,EAAE;AAFd,KADO,EAKPR,MAAM,CAACE,OALA,CAAT,CAMEO,IANF,CAMO,UAACC,QAAD,EAAc;AACnBA,MAAAA,QAAQ,CAACC,QAAT,CAAkB,OAAlB;AADmB,UAEXC,SAFW,GAEgCF,QAFhC,CAEXE,SAFW;AAAA,UAEAC,WAFA,GAEgCH,QAFhC,CAEAG,WAFA;AAAA,UAEgBC,YAFhB,GAEgCJ,QAFhC,CAEgBI,YAFhB;AAGnB,UAAMC,YAAY,GAAGH,SAAS,CAACI,oBAAV,EAArB,CAHmB,CAKnB;;AACAN,MAAAA,QAAQ,CAACO,cAAT,CAAwB,UAAAC,MAAM,EAAI;AAChCA,QAAAA,MAAM,CAACC,IAAP,CAAY;AACVC,UAAAA,IAAI,EAAE,cADI;AAGVC,UAAAA,GAAG,EAAE,mQAHK;AAIVC,UAAAA,KAAK,EAAC,aAJI;AAKVC,UAAAA,OAAO;AAAA,oFAAG;AAAA;AAAA;AAAA;AAAA;AACRb,sBAAAA,QAAQ,CAACc,eAAT,CAAyB,0BAAzB;;AADQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AALG,SAAZ;AAUD,OAXD,EANmB,CAkBnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIJd,MAAAA,QAAQ,CAACO,cAAT,CAAwB,UAAAC,MAAM,EAAI;AAChCA,QAAAA,MAAM,CAACC,IAAP,CAAY;AACRC,UAAAA,IAAI,EAAE,cADE;AAERC,UAAAA,GAAG,EAAE,gJAFG;AAGRC,UAAAA,KAAK,EAAE,UAHC;AAIRC,UAAAA,OAAO;AAAA,qFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACkBR,YAAY,CAACU,iBAAb,EADlB;;AAAA;AACDC,sBAAAA,UADC;AAEDC,sBAAAA,WAFC,GAEab,YAAY,CAACc,WAF1B;AAGDC,sBAAAA,OAHC,GAGS;AACdC,wBAAAA,QAAQ,EAAE,gBADI;AAEdJ,wBAAAA,UAAU,EAAVA,UAFc;AAGdK,wBAAAA,KAAK,EAAEJ,WAAW,CAACK,UAHL;AAIdC,wBAAAA,YAAY,EAAE;AAJA,uBAHT;AAUPvB,sBAAAA,QAAQ,CAACwB,WAAT,CAAqBL,OAArB;;AAVO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJC,SAAZ;AAiBD,OAlBD,EA/BuB,CAoDrB;;AACJnB,MAAAA,QAAQ,CAACyB,eAAT,CAAyB,CAAC,cAAD,EAAgB,eAAhB,EAAgC,mBAAhC,EAAoD,iCAApD,EAAsF,qBAAtF,EAA4G,aAA5G,EAA0H,kBAA1H,EAA6I,mBAA7I,EAAiK,kBAAjK,EAAoL,kBAApL,EAAuM,YAAvM,EAAoN,YAApN,EAAiO,wBAAjO,EAA0P,+BAA1P,EAA0R,+BAA1R,EAA0T,sBAA1T,EAAiV,4BAAjV,EAA8W,iBAA9W,EAAgY,oBAAhY,EAAqZ,aAArZ,EAAma,eAAna,EAAmb,kBAAnb,EAAsc,kBAAtc,EAAyd,cAAzd,EAAwe,mBAAxe,EAA4f,uBAA5f,EAAohB,qBAAphB,EAA0iB,mBAA1iB,EAA8jB,uBAA9jB,EAAslB,YAAtlB,CAAzB,EArDyB,CAsDtB;;AAEIzB,MAAAA,QAAQ,CAACO,cAAT,CAAwB,UAAAC,MAAM,EAAI;AACjCA,QAAAA,MAAM,CAACC,IAAP,CAAY;AAEVC,UAAAA,IAAI,EAAE,cAFI;AAGVC,UAAAA,GAAG,EAAE,mQAHK;AAIVC,UAAAA,KAAK,EAAE,aAJG;AAKVC,UAAAA,OAAO;AAAA,qFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACPlB,OADO;AAAA;AAAA,6BACWU,YAAY,CAACU,iBAAb,CAA+B;AAAEW,wBAAAA,KAAK,EAAE,KAAT;AAAgBC,wBAAAA,OAAO,EAAE;AAAzB,uBAA/B,CADX;;AAAA;AAAA;;AAAA,mCACC/B,GADD;;AAEP;AACA;AACMgC,sBAAAA,GAJC,GAIK1B,SAAS,CAAC2B,WAAV,EAJL;AAAA;AAAA,6BAKgBxB,YAAY,CAACU,iBAAb,EALhB;;AAAA;AAKHC,sBAAAA,UALG;AAAA;AAAA,6BAOUY,GAAG,CAACE,WAAJ,CAAgB;AAAEd,wBAAAA,UAAU,EAAVA;AAAF,uBAAhB,CAPV;;AAAA;AAOHe,sBAAAA,IAPG;AAQHC,sBAAAA,GARG,GAQG,IAAIC,UAAJ,CAAeF,IAAf,CARH;AASHG,sBAAAA,IATG,GASI,IAAIC,IAAJ,CAAS,CAACH,GAAD,CAAT,EAAgB;AAAEtB,wBAAAA,IAAI,EAAE;AAAR,uBAAhB,CATJ;AAUL0B,sBAAAA,OAVK,GAUKrD,OAAO,CAACsD,GAAR,GAAcC,KAAd,CAAoB,mGAApB,CAVL;AAWTF,sBAAAA,OAAO,CAACG,GAAR,CAAYL,IAAZ;;AAXS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AALG,SAAZ;AAqBD,OAtBA;AAyBF,KAvFD;AAwFD,GA5FQ,EA4FN,EA5FM,CAAT;AA+FA,sBACI,uDACF,yCADE,eAIF;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAE5C,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAQ,IAAA,OAAO,EAAEC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CAJE,CADJ;AAeD,CAhID;;AAkIAP,QAAQ,CAACwD,MAAT,eAAgB,uDAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAF,CAAhB,EAAgCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC,E,CAGA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React,{useState} from 'react'; \nimport {storage} from \"./firebase\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport React, { useRef, useEffect} from 'react';\nimport WebViewer from '@pdftron/webviewer';\n\n// import './App.css';\n \n\n \n \nconst PdfApp =()=>{\n\n\n \n\n  const viewer = useRef(null);\n  const showSignaturePanel=()=> {\n    if (viewer.current.querySelector('iframe').contentDocument)\n      // viewer.current.querySelector('iframe').contentDocument.querySelector(\n      //   'div[data-element=\"signatureToolButton\"]'\n      // ).firstChild.click();\n      console.log(\"Hiiiii\");\n      console.log(viewer.current.querySelector('iframe').contentDocument.querySelector(\n        'div[data-element=\"signatureToolButton\"]'\n      ));\n  }\n  \n\n  useEffect(() => {\n\n    \n    \n    WebViewer(\n      {\n        path: '/webviewer/lib',\n        initialDoc: 'https://www.eurofound.europa.eu/sites/default/files/ef_publication/field_ef_document/ef1710en.pdf',\n      },  \n      viewer.current,\n    ).then((instance) => {\n      instance.setTheme('light');\n      const { docViewer, Annotations ,   CoreControls} = instance;\n      const annotManager = docViewer.getAnnotationManager();\n\n      //////////////////////////////\n      instance.setHeaderItems(header => {\n        header.push({\n          type: 'actionButton',\n          \n          img: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"/></svg>',\n          title:'E signature',\n          onClick:  async () => {\n            instance.setToolbarGroup('signatureToolGroupButton');\n  \n}\n        });\n      });\n      ////////////////////////////////\n      // instance.setToolbarGroup('signatureToolGroupButton');\n      // instance.setHeaderItems(function(header) {\n      //   header.getHeader('toolbarGroup-Annotate').push({\n      //     type: 'toolGroupButton',\n      //     toolGroup: 'lineTools',\n      //     dataElement: 'lineToolGroupButton',\n      //     title: 'annotation.line',\n      //   });\n      // ///////////////////\n\n\n  \n  instance.setHeaderItems(header => {\n    header.push({\n        type: 'actionButton',\n        img: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"/></svg>',\n        title: 'download',\n        onClick: async () => {\n          const xfdfString = await annotManager.exportAnnotations();\n          const saveOptions = CoreControls.SaveOptions;\n          const options = {\n            filename: 'myDocument.pdf',\n            xfdfString,\n            flags: saveOptions.LINEARIZED,\n            downloadType: 'pdf'\n          };\n          \n          instance.downloadPdf(options);\n        }\n    });\n  });\n  \n\n    ///disabled unuseful elements in tool bar\ninstance.disableElements(['zoomInButton','zoomOutButton','zoomOverlayButton','startFormEditingToolGroupButton','cropToolGroupButton','printButton','eraserToolButton','themeChangeButton','fullscreenButton','eraserToolButton','redoButton','undoButton','calloutToolGroupButton','fileAttachmentToolGroupButton','fileAttachmentToolGroupButton','stampToolGroupButton','rubberStampToolGroupButton','leftPanelButton','viewControlsButton','zoomOverlay','panToolButton','textSelectButton','selectToolButton','searchButton','toggleNotesButton','toolbarGroup-Annotate','toolbarGroup-Shapes','toolbarGroup-Edit','toolbarGroup-Annotate','menuButton']);\n   //added save button in header toolbar\n  \n       instance.setHeaderItems(header => {\n        header.push({\n          \n          type: 'actionButton',\n          img: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"/></svg>',\n          title: 'save button',\n          onClick: async() => {\n            console.log(await annotManager.exportAnnotations({ links: false, widgets: false }));\n            // save the annotations\n            //////////////\n            const doc = docViewer.getDocument();\n          const xfdfString = await annotManager.exportAnnotations();\n          \n          const data = await doc.getFileData({ xfdfString});\n          const arr = new Uint8Array(data);\n          const blob = new Blob([arr], { type: 'application/pdf' });\n          let fileRef = storage.ref().child('https://www.eurofound.europa.eu/sites/default/files/ef_publication/field_ef_document/ef1710en.pdf' );\n          fileRef.put(blob);\n          \n\n          }\n        });\n      });\n\n\n    });\n  }, []);\n \n \n  return(\n      <>\n    <>\n    \n    </>\n    <div className=\"App\">\n      \n      <div className=\"webviewer\" ref={viewer}></div>\n      <button onClick={showSignaturePanel}>E-sign</button> \n    </div>\n       \n    \n    \n     </>\n  );\n};\n \nReactDOM.render(<><PdfApp/></>, document.getElementById('root'));\n\n\n// let showSignaturePanel = async () => {\n//   if (this.viewerRoot.current.querySelector('iframe').contentDocument)\n//     this.viewerRoot.current.querySelector('iframe').contentDocument.querySelector(\n//       'div[data-element=\"signatureToolButton\"]'\n//     ).firstChild.click();\n// }\n\n// //  showSi..()"]},"metadata":{},"sourceType":"module"}